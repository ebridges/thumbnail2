name: thumbnailer-release

on:
  push:
    branches:
      - master
      - feature/*

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2

    - name: Set up git credentials.
      run: |
        git config --local user.email "thumbnailer-release@localhost"
        git config --local user.name "thumbnailer-release"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip poetry
        poetry export -f requirements.txt > requirements.txt
        pip install commitizen
        pip install -r requirements.txt

    - name: Bump version & generate changelog
      run: |
        cz bump --yes --changelog

    - name: Collect version number
      id: collect-version
      run: |
        echo "::set-output name=version::$(cat version.txt | tr -d '\n')"

    - name: Uninstall unneeded dependencies
      run: |
        pip uninstall commitizen

    - name: Build lambda archive.
      id: lambda-archive
      run: |
        lgw lambda-archive --config-file=lgw.cfg

    - name: Push all changes back to origin.
      uses: Woile/github-push-action@master
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        tags: "true"

    - name: Create release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ steps.collect-version.outputs.version }}"
        release_name: Release v${{ steps.collect-version.outputs.version }}
        # body: |
        #   Changes in this Release
        #   - First Change
        #   - Second Change
        draft: false
        prerelease: false

    - name: Upload Release Asset (zipfile)
      id: upload-release-asset-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # This pulls from the CREATE RELEASE step above, referencing it's
        # ID to get its outputs object, which include a `upload_url`.
        # See this blog post for more info:
        # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./build/thumbnailer-bundle.zip
        asset_name: thumbnailer-${{ steps.collect-version.outputs.version }}.zip
        asset_content_type: application/zip
